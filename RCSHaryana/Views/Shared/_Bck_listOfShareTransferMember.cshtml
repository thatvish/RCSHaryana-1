<script src="~/scripts/js/BackLogShareTransferARCS.js"></script>
<style>
    .ui-datepicker select.ui-datepicker-month, .ui-datepicker select.ui-datepicker-year {
        color: black;
        font-size: 12px;
        font-weight: bold;
    }

    .col-md-6 {
        font-weight: normal;
    }

    input[type="checkbox"] {
        margin: -23px 0 0;
        margin-top: 1px \9;
        line-height: normal;
    }
    #dvLoading {
        background: #000 url('../../images/giphy.gif') no-repeat center center;
        height: 100px;
        width: 100px;
        position: fixed;
        z-index: 1000;
        left: 50%;
        top: 50%;
        margin: -25px 0 0 -25px;
    }

</style>
<div class="col-lg-12">
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table no-margin">
                    <thead>
                        <tr>
                            <th hidden="hidden">

                            </th>
                            <th>
                                Serial No.
                            </th>
                            <th>
                                Share Transferred From
                            </th>
                            <th>
                                Share Transferred To
                            </th>
                            <th>
                                Share Transfer Approval Date
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody class="Bck_Share_tblBindMembers"></tbody>
                </table>
            </div><!--end .table-responsive -->
        </div><!--end .card-body -->
    </div><!--end .card -->
</div>
<div class="modal fade cus-modal-div" id="myModal11" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div id="dvLoading" style="display:none"></div>
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-body">
                <div class="form form-validate">
                    <div class="card">
                        <div class="card-head style-primary">
                            <header>Details of Old and New member</header>
                        </div>
                        <div class="card-body">
                            <div class="col-md-6 form-group">
                                <input type="checkbox" class="form-control" value="false" autocomplete="off" id="FirstShareTrans" name="FirstShareTrans">
                                <label for="FirstShareTrans">1. First Time Share Transfer</label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="hidden" value="0" id="offdelete" />
                                @Html.DropDownList("MemberId", new SelectList(ViewBag.MemberDetail as System.Collections.IEnumerable, "Value", "Text"),
             "Select", new { id = "MemberId", @class = "form-control", required = "required" })
                                <label for="OldMemberName">2. Old Member's Name <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="Approvaldatetime" name="datepicker" readonly>
                                <label for="datepicker">3. Share Transfer Approval Date</label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="ApprovalLetterNo" name="ApprovalLetterNo">
                                <label for="datepicker">4. Share Transfer Approval Letter No.</label>
                            </div>
                        </div>
                    </div>
                    <form action="@Url.Action("CopyofResolution", "ARCS")" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <div class="card">
                            <div class="card-body">
                                <div class="col-md-6 form-group">

                                    <input type="file" name="files" id="files_15" dirname="files_15" class="form-control" accept="application/pdf" onchange="validationShare(this)" />
                                    <label for="copyofdatepdf">5. Copy of Date of Resolution</label>
                                    <p id="showId"></p>
                                </div>
                                <div class="col-md-6 form-group">
                                    <a href="@Url.Action("GetPdf", "ARCS", new { fileName = "PDF", Value = "CopyOfResolution" })" target="_blank" class="btn btn-primary" id="showCOR1" style="display:none">View</a>
                                </div>
                                <input id="btnUploadCpy" type="submit" value="Upload" class="btn btn-primary" disabled />
                            </div>
                        </div>
                    </form>
                    <div class="card">
                        <div class="card-head style-accent-bright">
                            <header>Add new member's details</header>
                        </div>
                        <div class="card-body">
                            @*<div class="col-md-12 form-group">
                                    <input pattern="[a-zA-Z0-9\s]+" type="text" autocomplete="off" class="form-control" id="NEWMemberName" name="MemberName" required>
                                    <label for="MemberName">New Member's Name <span style="color:red;"><strong>*</strong></span></label>
                                </div>*@
                            <div class="col-md-6 form-group">
                                @*<input type="file" name="files_10" id="files_10" class="form-control" onchange="validationForMemberImage(this)" />*@
                                <input type="file" name="files_101" id="files_101" required class="form-control" onchange="validationForMemberImage(this)" />
                                <label for="MemberName">1.1 Member's Photo <span style="color:red;"><strong>*</strong></span></label>
                                <p class="help-block">Photo size should be maximum 150 kb</p>
                            </div>
                            <div class="col-md-6 form-group">
                                <img id="img1" height="100" name="img1">
                                <p id="b64" hidden="hidden"></p>
                                <label for="MemberName">View Member's Photo</label>
                            </div>
                            <div class="col-md-12 form-group">
                                <input type="hidden" class="form-control" id="sharetransferId" name="sharetransferId">
                                <input pattern="[a-zA-Z0-9\s]+" type="text" autocomplete="off" class="form-control" id="MemberName1" name="MemberName1" required>
                                <label for="MemberName">1.2 New Member's Name <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input pattern="[a-zA-Z0-9\s]+" type="text" autocomplete="off" class="form-control" id="FatherName1" name="FatherName1" required>
                                <label for="FatherName">2. Guardian's/Father's /Husband's Name <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.DropDownList("GenderOfSocietyMember1", new List<SelectListItem>
                                                 { new SelectListItem { Text = "Male", Value = "Male"},
                                                   new SelectListItem { Text = "Female", Value = "Female"},
                                                   new SelectListItem { Text = "Trans Gender", Value = "Trans Gender"}
                                                   }, "Select Gender", new { id = "GenderOfSocietyMember1", @class = "form-control", required = "required" })
                                <label for="SelectGender">3. Select Gender <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="datepicker" name="datepicker" readonly>
                                <label for="datepicker">4. Date of Birth</label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="dateofresolution" name="dateofresolution" required readonly>
                                <label for="dateofresolution">5. Date of Resolution</label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="Age1" name="Age1" required data-rule-range="[18,100]" data-rule-digits="true">
                                <label for="Age">6. Age <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="MobileNumberOfSocietyMember1" name="MobileNumberOfSocietyMember1" data-rule-digits="true" maxlength="10" minlength="10" required>
                                <label for="Mobile">7. Mobile <span style="color:red;"><strong>*</strong></span></label>
                                <p class="help-block">10 digit mobile no</p>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="email" class="form-control" autocomplete="off" id="EmailId1" name="EmailId1">
                                <label for="EmailId">8. Email</label>
                                <p class="help-block">example@example.com</p>
                            </div>
                            <div id="divAadharNo1" class="col-md-6 form-group">
                                <input type="text" class="form-control AadharNo1" autocomplete="off" id="AadharNo11" name="AadharNo11" onkeydown="AllowNumbersOnly(event,this)" data-rule-digits="true" maxlength="12" minlength="12">
                                <label id="result1" for="AadharNo">9. Aadhaar No</label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input pattern="[a-zA-Z0-9\s]+" type="text" class="form-control" autocomplete="off" id="OccupationOfMember1" name="OccupationOfMember1" required>
                                @*@Html.DropDownList("OccupationOfMember", new SelectList(ViewBag.Occupations as System.Collections.IEnumerable, "Value", "Text"),
                                    "Select", new { id = "OccupationOfMember", @class = "form-control", required = "required" })*@
                                <label for="Occupationofmembers">10. Occupation of Member <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="NoofSharesSubscribed1" name="NoofSharesSubscribed1" data-rule-digits="true" required>
                                <label for="NoofSharesSubscribed">11. No. of Shares Subscribed <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input pattern="[a-zA-Z0-9\s]+" type="text" class="form-control" autocomplete="off" id="NameofNominee1" name="NameofNominee1" required>
                                <label for="NameofNominee">12. Name of Nominee <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="NomineeAge1" name="NomineeAge1" required data-rule-range="[1,100]" data-rule-digits="true">
                                <label for="NomineeAge">13. Age of Nominee <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.DropDownList("RelationshipCodeOfSocietyMember1", new SelectList(ViewBag.Relationship as System.Collections.IEnumerable, "Value", "Text"),
             "Select", new { id = "RelationshipCodeOfSocietyMember1", @class = "form-control", required = "required" })
                                <label for="RelationshipCode">14. Relationship with Nominee <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input pattern="[a-zA-Z0-9/(),.-\s]+" type="text" class="form-control" autocomplete="off" id="Address11" name="Address11" required>
                                <label for="RegisteredAddress">15.1 Place of Residence <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input pattern="[a-zA-Z0-9/(),.-\s]+" type="text" class="form-control" autocomplete="off" id="Address22" name="Address22" required>
                                <label for="HouseNoSectorNoRoad">15.2 House No./Sector No./Road <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input pattern="[a-zA-Z0-9/(),.-\s]+" type="text" class="form-control" autocomplete="off" id="PostOfficeOfSocietyMember1" name="PostOfficeOfSocietyMember" required>
                                <label for="PostOffice">15.3 Post Office <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                            <div class="col-md-6 form-group">
                                <input type="text" class="form-control" autocomplete="off" id="PostalCodeOfSocietyMember1" name="PostalCodeOfSocietyMember1" onkeydown="AllowNumbersOnly(event,this)" data-rule-number="true" maxlength="6" minlength="6" pattern="[0-9]{6}" data-rule-digits="true" required>
                                <label for="PostalCode">15.4 Postal Code <span style="color:red;"><strong>*</strong></span></label>
                                <p class="help-block">Six Digit Pincode</p>
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.DropDownList("DistrictOfMember1", new SelectList(ViewBag.District as System.Collections.IEnumerable, "Value", "Text"),
"Select", new { id = "DistrictOfMember1", @class = "form-control", required = "required" })
                                <label for="District">15.5 District <span style="color:red;"><strong>*</strong></span></label>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="btnUpdateShareTransfer" onclick="UpdatebyARCS();">Update</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .cus-modal-div .modal-dialog {
        width: 70% !important;
    }

    .form-group .form-control {
        margin-top: 10px;
        padding-left: 0px;
    }
</style>
<script>
    function validationShare(abc) {    
        var id = abc.id;
        var selectedFile = document.getElementById(id).files;
        var a = abc.files[0].size / 1024;
        if (a < 1000) {
            //Check File is not Empty
            if (selectedFile.length > 0) {    
                var re = /(\.pdf)$/i;
                var fname = (document.getElementById(id).value).substring(12);
                var res = fname.split(".");
                var count = res.length;
                if (count > 2) {
                    document.getElementById(id).value = null;
                    alert("File not supported! Kindly select pdf file only");
                    return false;
                }
                if (re.exec(fname)) {
                    var extenstion = (document.getElementById(id).value).substring(12);
                    // Select the very first file from list
                    var fileToLoad = selectedFile[0];
                    // FileReader function for read the file.
                    var fileReader = new FileReader();
                    var base64;
                    var filesubstring;
                    // Onload of file read the file content
                    fileReader.onload = function (fileLoadedEvent) {
                        base64 = fileLoadedEvent.target.result;
                        substring = "JVBER";
                        if (base64.includes(substring)) {
                        }
                        else {
                            document.getElementById(id).value = null;
                            alert("File not supported! Kindly select pdf file only");
                        }
                        //console.log(base64);
                    };
                    // Convert data to base64
                    fileReader.readAsDataURL(fileToLoad);
                }
                else {
                    document.getElementById(id).value = null;
                    alert("File not supported! Kindly select pdf file only");
                }
            }
        }
        else {
            document.getElementById(id).value = null;
            alert("File size is not exceed 500 kb");
        }
    }
    $(document).ready(function (){
         if (@Convert.ToInt16(Session["SocietyStatus"]) ==12)
            {
             $('#btnUpdateShareTransfer').attr('disabled', 'disabled');            
        }
        $(function () {
            $("#Approvaldatetime,#datepicker,#dateofresolution").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: '-100:+100',
                dateFormat: 'dd-mm-yy',
                maxDate: 0,
                showOn: 'focus',
                showButtonPanel: true,
                closeText: 'Clear', // Text to show for "close" button
                onClose: function () {
                    var event = arguments.callee.caller.caller.arguments[0];
                    // If "Clear" gets clicked, then really clear it
                    if ($(event.delegateTarget).hasClass('ui-datepicker-close')) {
                        $(this).val('');
                    }
                }
            });
        });
        $("#btnAdd").click(function () {
            alert("Detail has been saved successfully");
        });
    });
    $(document).ready(function () {
        $("#FirstShareTrans").on('change', function () {
            if ($(this).is(':checked')) {
                $("#ApprovalLetterNo").val("");
                $("#Approvaldatetime").val("");
                $("#ApprovalLetterNo").attr("readonly", "readonly");
                $("#ApprovalLetterNo").attr("Placeholder", "No Need To Fill");
                $("#Approvaldatetime").datepicker("destroy");
                $("#Approvaldatetime").attr("Placeholder", "No Need To Fill");

                $(this).attr('value', 'true');
            } else {
                $("#ApprovalLetterNo").attr("readonly", false);
                $("#ApprovalLetterNo").attr("Placeholder", "");
                $("#Approvaldatetime").attr("Placeholder", "");
                $(this).attr('value', 'false');
                $("#Approvaldatetime").datepicker({
                    changeMonth: true,
                    changeYear: true,
                    yearRange: '-100:+100',
                    dateFormat: 'dd-mm-yy',
                    maxDate: 0,
                    showOn: 'focus',
                    showButtonPanel: true,
                    closeText: 'Clear', // Text to show for "close" button
                    onClose: function () {
                        var event = arguments.callee.caller.caller.arguments[0];
                        // If "Clear" gets clicked, then really clear it
                        if ($(event.delegateTarget).hasClass('ui-datepicker-close')) {
                            $(this).val('');
                        }
                    }
                });

            }
            var IsCheck = $("#FirstShareTrans").val();
            if (IsCheck === "true") {

                IsCheck = 1;
            }
            if (IsCheck === "false") {

                IsCheck = 0;
            }
        });
    });
        function AllowNumbersOnly(e, el) {
            //debugger;
            var key = e.which || e.keyCode;
            if (key == 8 || key == 9 || key == 46 || (e.keyCode >= 35 && e.keyCode <= 39)) return true;
            if (e.shiftKey) e.preventDefault ? e.preventDefault() : e.returnValue = false;
            var value1 = el.value;
            if (key >= 48 && key <= 57 || key >= 96 && key <= 105) return true;
            else {
                e.preventDefault ? e.preventDefault() : e.returnValue = false;
                return false;
            }
        }
        function validationForMemberImage(abc) {
            //debugger;
            var id = abc.id;
            $formData = new FormData();
            var selectedFile = document.getElementById(id).files;
            //Check File is not Empty
            var a = abc.files[0].size / 1024;
            if (a < 100) {
                if (selectedFile.length > 0) {
                    var re = /(\.png)$/i;
                    var re1 = /(\.jpeg)$/i;
                    var re2 = /(\.jpg)$/i;
                    var fname = (document.getElementById(id).value).substring(12);
                    if (re.exec(fname) || re1.exec(fname) || re2.exec(fname)) {
                        if (abc.files && abc.files[0]) {
                            var fr = new FileReader();
                            fr.addEventListener("load", function (e) {
                                ///debugger;
                                if (window.FormData !== undefined) {

                                    var fileUpload = $("#files_101").get(0);
                                    var files = fileUpload.files;

                                    // Create FormData object
                                    var fileData = new FormData();

                                    // Looping over all files and add it to FormData object
                                    for (var i = 0; i < files.length; i++) {
                                        fileData.append(files[i].name, files[i]);
                                    }

                                    // Adding one more key to FormData object
                                    //fileData.append('username', ‘Manas’);
                                    $.ajax({
                                        url: '/Society/ImageSave',
                                        type: "POST",
                                        contentType: false, // Not to set any content header
                                        processData: false, // Not to process data
                                        data: fileData,
                                        success: function (imagepath) {
                                            //debugger;
                                            //var url = getRootUrl();
                                            //alert(url);
                                            //debugger;
                                            $("#img1").attr("src", imagepath);
                                        },
                                        error: function (err) {
                                            alert(err.statusText);
                                        }
                                    });
                                } else {
                                    alert("FormData is not supported.");
                                }
                                //document.getelementbyid("img").src = e.target.result;

                                //document.getelementbyid("b64").innerhtml = e.target.result;
                            });
                            fr.readAsDataURL(abc.files[0]);
                        }
                    }
                    else {
                        document.getElementById(id).value = null;
                        alert("file not supported! kindly select png or jpeg file only");
                    }
                }
            }
            else {
                document.getElementById(id).value = null;
                alert("file size is not exceed 150 kb");
            }
    }
        function validation(abc) {
        var id = abc.id;
        var selectedFile = document.getElementById(id).files;
        var a = abc.files[0].size / 1024;
        if (a < 1000) {
            //Check File is not Empty
            if (selectedFile.length > 0) {
                //debugger;
                var re = /(\.pdf)$/i;
                var fname = (document.getElementById(id).value).substring(12);
                var res = fname.split(".");
                var count = res.length;
                if (count > 2) {
                    document.getElementById(id).value = null;
                    alert("File not supported! Kindly select pdf file only");
                    return false;
                }
                if (re.exec(fname)) {
                    var extenstion = (document.getElementById(id).value).substring(12);
                    // Select the very first file from list
                    var fileToLoad = selectedFile[0];
                    // FileReader function for read the file.
                    var fileReader = new FileReader();
                    var base64;
                    var filesubstring;
                    // Onload of file read the file content
                    fileReader.onload = function (fileLoadedEvent) {
                        base64 = fileLoadedEvent.target.result;
                        substring = "JVBER";
                        if (base64.includes(substring)) {
                        }
                        else {
                            document.getElementById(id).value = null;
                            alert("File not supported! Kindly select pdf file only");
                        }
                        //console.log(base64);
                    };
                    // Convert data to base64
                    fileReader.readAsDataURL(fileToLoad);
                }
                else {
                    document.getElementById(id).value = null;
                    alert("File not supported! Kindly select pdf file only");
                }
            }
        }
        else {
            document.getElementById(id).value = null;
            alert("File size is not exceed 500 kb");
        }
    }
</script>
